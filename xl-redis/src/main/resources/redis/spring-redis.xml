<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.5.xsd
            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
            
    <bean id="propertyConfigurer_redis" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="2"/>
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="locations">
            <list>
                <value>classpath:redis/redis.properties</value>
            </list>
        </property>
    </bean>
    <context:annotation-config/>

    <!-- session  实现session共享，将session数据存到redis中-->
    <bean class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <!-- Session的过期时间 600=10 分钟-->
        <property name="maxInactiveIntervalInSeconds" value="1800"/>
    </bean>
    
    <!-- redis pool -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.pool.testOnReturn}"/>
        <property name="testWhileIdle" value="${redis.pool.testWhileIdle}"/>
    </bean>

    <!-- session redis -->
    <bean id="springSessionRedisFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${session.redis.host}"/>
        <property name="port" value="${session.redis.port}"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
    </bean>
    
    
	<!-- JedisTemplate-->
    <bean id="fastJsonSerializer" class="com.opendata.redis.template.FastJsonSerializer">
    </bean>
    
    <bean id="jedisTemplate" class="com.opendata.redis.template.JedisTemplate">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${cache.redis.host}"/>
        <constructor-arg index="2" value="${cache.redis.port}"/>
        <constructor-arg index="3" ref="fastJsonSerializer"/>
    </bean>


	<!-- redis分布式锁服务 -->
	<bean id="redisBillLockService" class="com.opendata.redis.lock.RedisBillLockServiceImpl">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${cache.redis.host}"/>
        <constructor-arg index="2" value="${cache.redis.port}"/>
    </bean>
    
    <!-- 分布式锁aop实现 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <context:component-scan base-package="com.opendata.redis.lock.aop"/>
</beans>
